MEV inspect & Dune analytics, Google Cloud & BigQuery were used to extarct, preapre, and aggregate the historical MEV data.

I - selecting and joining one year transactions and blocks (Ethereum 
WITH one as SELECT DISTINCT eth.block_number, eth.block_timestamp, eth.receipt_gas_used, blocks.base_fee_per_gas, eth.gas_price, eth.hash, eth.from_address, blocks.miner
FROM `Ethereum.data.transactions` as eth, `Ethereum.data.blocks` as blocks
WHERE eth.block_number = blocks.number and eth.block_number > 13136426 and eth.block_number < 15449618
ORDER BY eth.block_number;

II - eliminating inter-miner transactions 
two as SELECT  mev.*, miners.label as miner_label, miners1.label as payer_label
FROM one as mev left outer join `miners` as miners on mev.miner = miners.address left outer join `miners` as miners1 on mev.from_address = miners1.address;

III - eliminating inter-miner transactions
three as SELECT  trx.*
FROM two as trx
WHERE trx.miner_label != trx.payer_label or trx.payer_label is null or trx.miner_label is null;

IV - aggragating historical MEV data
four as SELECT  mev.block_number, MAX(mev.block_timestamp) as timestamp, SUM(mev.receipt_gas_used) as gas_used, MAX(mev.base_fee_per_gas), 0 as net_coinbase_transfers, SUM((mev.gas_price-mev.base_fee_per_gas)/1e18 *mev.receipt_gas_used) as net_fees, SUM(mev.base_fee_per_gas/ 1e18*mev.receipt_gas_used) as burned_fees, 0 as net_searcher_profit_per_block_eth
FROM three as mev
GROUP BY mev.block_number
ORDER BY mev.block_number;

V - aggragating historical MEV data with ETH base_fee
SELECT mev.block_number, mev.timestamp as block_timestamp,mev.gas_used, mev.f0_/1000000000 as base_fee, mev.net_coinbase_transfers, mev.net_fees, mev.burned_fees, (mev.net_coinbase_transfers + mev.net_fees) as miner_extracted,  (mev.net_coinbase_transfers + mev.net_fees + mev.net_searcher_profit_per_block_eth) miner_extractable
FROM `testing-362420.data.one4four` as mev


VI - join with hstorical MEV data = final_historical_data
final_historical_data as SELECT eth.block_number, eth.block_timestamp, eth.gas_used, eth.base_fee, (eth.net_coinbase_transfers + IFNULL(mev.net_coinbase_transfers, 0)) as net_coinbase_transfers, eth.net_fees, eth.burned_fees, (eth.miner_extracted + IFNULL(mev.net_coinbase_transfers, 0)) as miner_extracted, (eth.miner_extracted + IFNULL(mev.net_coinbase_transfers, 0) + IFNULL(mev.net_searcher_profit_per_block_eth, 0)) as miner_extractable
FROM four as eth left outer join historical_aggregated_MEV as mev on eth.block_number = mev.block_number
ORDER BY eth.block_number;
